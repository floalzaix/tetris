<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="1.609" tests="1483" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="23"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="C:\Users\floal\Documents\General\Cours\Sup\Eseo\E3e\S2\PDLO\Projet Tetris\tetris\target\test-classes;C:\Users\floal\Documents\General\Cours\Sup\Eseo\E3e\S2\PDLO\Projet Tetris\tetris\target\classes;C:\Users\floal\.m2\repository\org\junit\jupiter\junit-jupiter\5.12.0\junit-jupiter-5.12.0.jar;C:\Users\floal\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.12.0\junit-jupiter-api-5.12.0.jar;C:\Users\floal\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\floal\.m2\repository\org\junit\platform\junit-platform-commons\1.12.0\junit-platform-commons-1.12.0.jar;C:\Users\floal\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\floal\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.12.0\junit-jupiter-params-5.12.0.jar;C:\Users\floal\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.12.0\junit-jupiter-engine-5.12.0.jar;C:\Users\floal\.m2\repository\org\junit\platform\junit-platform-engine\1.12.0\junit-platform-engine-1.12.0.jar;"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="user.timezone" value="Europe/Paris"/>
    <property name="os.name" value="Windows 11"/>
    <property name="java.vm.specification.version" value="23"/>
    <property name="user.country" value="FR"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk-23\bin"/>
    <property name="sun.java.command" value="C:\Users\floal\AppData\Local\Temp\surefire17167971155244182887\surefirebooter-20250418091414881_3.jar C:\Users\floal\AppData\Local\Temp\surefire17167971155244182887 2025-04-18T09-14-14_735-jvmRun1 surefire-20250418091414881_1tmp surefire_0-20250418091414881_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="test" value="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest"/>
    <property name="surefire.test.class.path" value="C:\Users\floal\Documents\General\Cours\Sup\Eseo\E3e\S2\PDLO\Projet Tetris\tetris\target\test-classes;C:\Users\floal\Documents\General\Cours\Sup\Eseo\E3e\S2\PDLO\Projet Tetris\tetris\target\classes;C:\Users\floal\.m2\repository\org\junit\jupiter\junit-jupiter\5.12.0\junit-jupiter-5.12.0.jar;C:\Users\floal\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.12.0\junit-jupiter-api-5.12.0.jar;C:\Users\floal\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\floal\.m2\repository\org\junit\platform\junit-platform-commons\1.12.0\junit-platform-commons-1.12.0.jar;C:\Users\floal\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\floal\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.12.0\junit-jupiter-params-5.12.0.jar;C:\Users\floal\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.12.0\junit-jupiter-engine-5.12.0.jar;C:\Users\floal\.m2\repository\org\junit\platform\junit-platform-engine\1.12.0\junit-platform-engine-1.12.0.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\floal"/>
    <property name="user.language" value="fr"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2025-01-21"/>
    <property name="java.home" value="C:\Program Files\Java\jdk-23"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="C:\Users\floal\Documents\General\Cours\Sup\Eseo\E3e\S2\PDLO\Projet Tetris\tetris"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="surefire.real.class.path" value="C:\Users\floal\AppData\Local\Temp\surefire17167971155244182887\surefirebooter-20250418091414881_3.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="23.0.2+7-58"/>
    <property name="user.name" value="Flo"/>
    <property name="stdout.encoding" value="Cp1252"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="maven.ext.class.path" value="C:\Users\floal\.vscode\extensions\oracle.oracle-java-24.0.0\nbcode\java\maven-nblib\netbeans-eventspy.jar"/>
    <property name="localRepository" value="C:\Users\floal\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="C:\Users\floal\AppData\Local\Temp\"/>
    <property name="java.version" value="23.0.2"/>
    <property name="user.dir" value="C:\Users\floal\Documents\General\Cours\Sup\Eseo\E3e\S2\PDLO\Projet Tetris\tetris"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="native.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Program Files\Java\jdk-23\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Python313\Scripts\;C:\Python313\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Ruby33-x64\bin;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\MATLAB\R2024b\bin;C:\Program Files\Git\cmd;C:\xampp\php;;C:\Program Files\Docker\Docker\resources\bin;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\ProgramData\ComposerSetup\bin;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Go\bin;C:\Users\floal\AppData\Local\Microsoft\WindowsApps;C:\Users\floal\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\heroku\bin;C:\Users\floal\AppData\Local\Pandoc\;C:\Users\floal\AppData\Local\Programs\MiKTeX\miktex\bin\x64\;C:\Users\floal\AppData\Roaming\Composer\vendor\bin;C:\xampp\php;C:\Program Files\Java\maven\bin;C:\Users\floal\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\Scripts;C:\Users\floal\AppData\Roaming\npm;C:\esp-idf-v5.0.8\tools\;C:\Users\floal\go\bin;C:\Users\floal\.dotnet\tools;."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="Cp1252"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="23.0.2+7-58"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="67.0"/>
  </properties>
  <testcase name="testEqualSymmetrie" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.034"/>
  <testcase name="testEqualNullite" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.003"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[1]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.014"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[2]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[3]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.002"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[4]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.002"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[5]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.002"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[6]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.002"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[7]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[8]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[9]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[10]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.002"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[11]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[12]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.002"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[13]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.002"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[14]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[15]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.002"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[16]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[17]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[18]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[19]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.002"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[20]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[21]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[22]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[23]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.002"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[24]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[25]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.002"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[26]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.002"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[27]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[28]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[29]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.003"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[30]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[31]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[32]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[33]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[34]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[35]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[36]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[37]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[38]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[39]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[40]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[41]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[42]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[43]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[44]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[45]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[46]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[47]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[48]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[49]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[50]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[51]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[52]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.002"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[53]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.002"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[54]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[55]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[56]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[57]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.002"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[58]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[59]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[60]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[61]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[62]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.002"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[63]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[64]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.003"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[65]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[66]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[67]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[68]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[69]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[70]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[71]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.002"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[72]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[73]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[74]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[75]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[76]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[77]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.002"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[78]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.002"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[79]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[80]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[81]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[82]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.002"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[83]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[84]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[85]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.007"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[86]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.003"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[87]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[88]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[89]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[90]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.005"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[91]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[92]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[93]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[94]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[95]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.002"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[96]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[97]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[98]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[99]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[100]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[101]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[102]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[103]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[104]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.002"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[105]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[106]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[107]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[108]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[109]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[110]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[111]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[112]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[113]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.002"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[114]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.002"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[115]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[116]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[117]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[118]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[119]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[120]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[121]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[122]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[123]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[124]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[125]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[126]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[127]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.002"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[128]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.002"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[129]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[130]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[131]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[132]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.011"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[133]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[134]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[135]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[136]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[137]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[138]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[139]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.002"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[140]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[141]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[142]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[143]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[144]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[145]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[146]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[147]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[148]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[149]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[150]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[151]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[152]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[153]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[154]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[155]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[156]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[157]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[158]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[159]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[160]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[161]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[162]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[163]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[164]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[165]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[166]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[167]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[168]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[169]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[170]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[171]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[172]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[173]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.003"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[174]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.002"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[175]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[176]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[177]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[178]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[179]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[180]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[181]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[182]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[183]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.002"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[184]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[185]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[186]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[187]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[188]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[189]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[190]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[191]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[192]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[193]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.002"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[194]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[195]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[196]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[197]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[198]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[199]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[200]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[201]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[202]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[203]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[204]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[205]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[206]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[207]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[208]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[209]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[210]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[211]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[212]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[213]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[214]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[215]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[216]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[217]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[218]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[219]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[220]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[221]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[222]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[223]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[224]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[225]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[226]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[227]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[228]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[229]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[230]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[231]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[232]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.002"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[233]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[234]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[235]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[236]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[237]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[238]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[239]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[240]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[241]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[242]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[243]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[244]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[245]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[246]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.002"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[247]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[248]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[249]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[250]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[251]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[252]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[253]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[254]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[255]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[256]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.002"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[257]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[258]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[259]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[260]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[261]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[262]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[263]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[264]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[265]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[266]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[267]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[268]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[269]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[270]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[271]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[272]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[273]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[274]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[275]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[276]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[277]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[278]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[279]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[280]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[281]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[282]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[283]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[284]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[285]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[286]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.005"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[287]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[288]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[289]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[290]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[291]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[292]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[293]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.002"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[294]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[295]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[296]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[297]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[298]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[299]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[300]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[301]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.002"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[302]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[303]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[304]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[305]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[306]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[307]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[308]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[309]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[310]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[311]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[312]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[313]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[314]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[315]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[316]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[317]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[318]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.003"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[319]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.002"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[320]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[321]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[322]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[323]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[324]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[325]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[326]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[327]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[328]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[329]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[330]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[331]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[332]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[333]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[334]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[335]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[336]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[337]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[338]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[339]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[340]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[341]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[342]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[343]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[344]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[345]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[346]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[347]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[348]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[349]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[350]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.002"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[351]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[352]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[353]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[354]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[355]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[356]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[357]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[358]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[359]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[360]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[361]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[362]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[363]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[364]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[365]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[366]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[367]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[368]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[369]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[370]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[371]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[372]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[373]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[374]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[375]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[376]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[377]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[378]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[379]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[380]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[381]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[382]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[383]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[384]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[385]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[386]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[387]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[388]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[389]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[390]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[391]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[392]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[393]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[394]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[395]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[396]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[397]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[398]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[399]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[400]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[401]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[402]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[403]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[404]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[405]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[406]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[407]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[408]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[409]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[410]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[411]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[412]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[413]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[414]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[415]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[416]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[417]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[418]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[419]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[420]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[421]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[422]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[423]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[424]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[425]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[426]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[427]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[428]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[429]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[430]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[431]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[432]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[433]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[434]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[435]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[436]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[437]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[438]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[439]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[440]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[441]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[442]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[443]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[444]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[445]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[446]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[447]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[448]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[449]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[450]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[451]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[452]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[453]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[454]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[455]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[456]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[457]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[458]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[459]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[460]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[461]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[462]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[463]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[464]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[465]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[466]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[467]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[468]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[469]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[470]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[471]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[472]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[473]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[474]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[475]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[476]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[477]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[478]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[479]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[480]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[481]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[482]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[483]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[484]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[485]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[486]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[487]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[488]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[489]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[490]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[491]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[492]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[493]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[494]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[495]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[496]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[497]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[498]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[499]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[500]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[501]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[502]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[503]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[504]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[505]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[506]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[507]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[508]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[509]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[510]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.002"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[511]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[512]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[513]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[514]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[515]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[516]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[517]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[518]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[519]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[520]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[521]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[522]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[523]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[524]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[525]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[526]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[527]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[528]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[529]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[530]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[531]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[532]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[533]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[534]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[535]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[536]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[537]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[538]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[539]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[540]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[541]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[542]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[543]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[544]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[545]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[546]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[547]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[548]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[549]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[550]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[551]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[552]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[553]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[554]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[555]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[556]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[557]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[558]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[559]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[560]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[561]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[562]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[563]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[564]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[565]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[566]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[567]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[568]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[569]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[570]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[571]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[572]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[573]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[574]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.003"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[575]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[576]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[577]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[578]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[579]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[580]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[581]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[582]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[583]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[584]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[585]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[586]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[587]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[588]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[589]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[590]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[591]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[592]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[593]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[594]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[595]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[596]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[597]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[598]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[599]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[600]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[601]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[602]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[603]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[604]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[605]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[606]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[607]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[608]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[609]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[610]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[611]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[612]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[613]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[614]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[615]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[616]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[617]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[618]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[619]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[620]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[621]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[622]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[623]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[624]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[625]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[626]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[627]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[628]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[629]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[630]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[631]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[632]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[633]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[634]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[635]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[636]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[637]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[638]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[639]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[640]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[641]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[642]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[643]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[644]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[645]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[646]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[647]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[648]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[649]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[650]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[651]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[652]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[653]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[654]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[655]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[656]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[657]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[658]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[659]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[660]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[661]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[662]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[663]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[664]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[665]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[666]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[667]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[668]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[669]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[670]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[671]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[672]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[673]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[674]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[675]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[676]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[677]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[678]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[679]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[680]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[681]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[682]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[683]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[684]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[685]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[686]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[687]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[688]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[689]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[690]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[691]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[692]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[693]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[694]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[695]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[696]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[697]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[698]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[699]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[700]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[701]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[702]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[703]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[704]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[705]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[706]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[707]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[708]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[709]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[710]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[711]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[712]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[713]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[714]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[715]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[716]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[717]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[718]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[719]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[720]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[721]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[722]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[723]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[724]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeInegalite(Coordonnees, Coordonnees)[725]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testCopy" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.002"/>
  <testcase name="testToString" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualReflexivite" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeEgalite" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeEgalite" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeEgalite" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeEgalite" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeEgalite" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeEgalite" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeEgalite" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeEgalite" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeEgalite" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeEgalite" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeEgalite" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeEgalite" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeEgalite" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeEgalite" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeEgalite" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeEgalite" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeEgalite" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeEgalite" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.004"/>
  <testcase name="testHashCodeEgalite" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeEgalite" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeEgalite" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeEgalite" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeEgalite" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeEgalite" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testHashCodeEgalite" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualClassesDifferentes" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[1]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[2]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.002"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[3]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[4]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[5]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[6]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[7]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[8]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[9]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[10]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[11]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[12]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[13]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[14]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[15]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[16]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[17]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[18]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[19]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[20]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[21]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[22]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[23]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[24]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[25]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[26]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[27]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[28]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[29]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[30]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[31]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[32]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[33]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[34]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[35]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[36]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[37]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[38]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[39]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[40]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[41]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[42]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[43]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[44]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[45]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[46]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[47]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[48]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[49]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[50]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[51]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[52]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[53]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[54]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[55]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[56]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[57]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[58]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[59]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[60]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[61]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[62]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[63]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[64]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[65]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[66]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[67]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[68]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[69]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[70]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[71]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[72]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[73]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[74]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[75]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[76]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[77]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[78]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[79]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[80]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[81]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[82]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[83]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[84]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[85]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[86]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[87]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[88]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[89]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[90]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[91]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[92]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[93]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[94]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[95]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[96]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[97]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[98]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[99]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[100]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[101]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[102]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[103]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[104]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[105]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[106]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[107]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[108]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[109]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[110]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[111]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[112]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[113]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[114]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[115]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[116]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[117]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[118]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[119]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[120]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[121]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[122]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[123]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[124]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[125]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[126]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[127]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[128]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[129]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[130]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[131]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[132]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[133]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[134]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[135]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[136]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[137]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[138]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.002"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[139]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[140]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[141]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[142]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[143]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[144]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[145]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[146]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[147]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[148]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[149]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.002"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[150]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[151]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[152]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[153]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[154]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[155]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[156]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[157]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[158]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[159]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[160]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[161]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[162]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[163]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[164]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[165]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[166]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[167]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[168]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[169]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[170]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[171]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[172]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[173]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[174]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[175]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[176]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[177]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[178]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[179]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[180]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[181]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[182]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[183]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[184]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[185]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[186]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[187]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[188]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[189]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[190]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[191]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[192]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[193]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[194]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[195]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[196]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[197]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[198]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[199]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[200]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[201]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[202]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[203]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[204]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[205]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[206]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[207]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[208]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[209]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[210]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[211]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[212]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[213]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[214]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[215]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[216]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[217]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[218]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[219]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[220]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[221]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[222]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[223]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[224]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[225]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[226]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[227]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[228]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[229]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[230]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[231]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[232]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[233]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[234]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[235]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[236]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[237]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[238]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[239]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[240]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[241]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[242]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[243]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[244]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[245]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[246]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[247]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[248]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[249]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[250]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[251]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[252]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[253]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[254]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[255]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[256]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[257]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[258]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[259]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[260]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[261]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[262]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[263]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[264]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[265]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[266]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[267]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[268]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[269]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.002"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[270]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[271]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[272]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[273]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[274]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[275]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[276]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[277]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[278]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[279]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[280]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[281]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[282]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[283]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[284]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[285]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[286]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[287]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[288]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[289]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[290]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[291]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[292]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[293]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[294]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[295]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[296]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[297]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[298]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[299]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[300]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[301]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[302]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[303]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[304]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[305]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[306]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[307]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[308]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[309]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[310]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[311]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[312]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[313]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[314]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[315]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[316]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[317]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[318]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[319]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[320]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[321]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[322]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[323]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[324]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[325]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[326]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[327]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[328]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[329]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[330]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[331]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[332]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[333]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[334]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[335]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[336]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[337]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[338]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[339]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[340]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[341]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[342]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[343]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[344]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[345]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[346]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[347]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[348]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[349]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[350]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[351]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[352]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[353]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[354]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[355]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[356]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[357]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[358]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[359]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[360]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[361]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[362]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[363]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[364]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[365]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[366]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[367]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[368]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[369]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[370]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[371]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[372]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[373]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[374]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[375]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[376]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[377]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[378]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[379]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[380]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[381]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[382]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[383]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[384]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[385]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[386]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[387]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[388]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[389]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[390]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[391]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[392]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[393]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[394]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[395]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[396]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[397]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[398]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[399]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[400]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[401]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[402]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[403]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[404]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[405]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[406]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[407]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[408]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[409]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[410]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[411]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[412]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[413]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[414]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[415]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[416]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[417]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[418]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[419]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[420]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[421]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[422]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[423]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[424]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[425]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[426]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[427]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[428]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[429]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[430]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[431]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[432]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[433]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[434]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[435]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[436]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[437]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[438]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[439]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[440]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[441]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[442]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[443]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[444]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[445]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[446]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[447]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[448]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[449]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[450]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[451]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[452]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[453]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[454]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[455]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[456]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[457]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[458]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[459]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[460]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[461]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[462]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[463]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[464]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[465]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[466]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[467]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[468]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[469]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[470]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[471]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[472]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[473]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[474]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[475]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[476]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[477]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[478]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[479]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[480]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[481]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[482]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[483]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[484]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[485]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[486]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[487]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[488]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[489]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[490]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[491]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[492]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[493]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[494]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[495]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[496]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[497]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[498]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[499]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[500]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[501]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[502]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[503]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[504]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[505]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[506]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[507]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[508]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[509]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[510]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[511]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[512]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[513]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[514]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[515]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[516]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[517]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[518]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[519]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[520]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[521]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[522]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[523]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[524]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[525]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[526]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[527]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[528]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[529]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[530]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[531]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[532]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[533]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[534]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[535]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[536]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[537]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[538]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[539]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[540]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[541]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[542]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[543]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[544]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[545]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[546]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[547]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[548]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[549]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[550]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[551]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[552]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[553]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[554]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[555]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[556]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[557]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[558]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[559]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[560]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[561]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[562]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[563]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[564]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[565]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[566]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[567]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[568]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[569]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[570]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[571]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[572]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[573]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[574]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[575]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[576]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[577]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[578]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[579]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[580]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[581]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[582]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[583]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[584]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[585]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[586]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[587]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[588]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[589]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[590]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[591]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[592]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[593]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[594]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[595]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[596]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[597]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[598]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[599]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[600]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[601]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[602]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[603]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[604]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[605]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[606]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[607]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[608]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[609]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[610]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[611]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[612]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[613]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[614]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[615]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[616]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[617]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[618]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[619]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[620]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[621]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[622]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[623]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[624]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[625]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[626]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[627]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[628]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[629]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[630]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[631]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[632]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[633]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[634]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[635]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[636]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[637]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[638]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[639]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[640]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[641]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[642]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[643]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[644]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[645]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[646]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[647]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[648]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[649]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[650]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[651]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[652]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[653]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[654]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[655]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[656]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[657]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[658]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[659]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[660]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[661]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[662]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[663]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[664]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[665]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[666]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[667]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[668]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[669]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[670]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[671]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[672]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[673]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[674]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[675]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[676]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[677]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[678]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[679]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[680]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[681]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[682]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[683]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[684]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[685]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[686]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[687]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[688]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[689]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[690]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[691]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[692]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[693]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[694]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[695]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[696]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[697]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[698]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[699]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[700]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[701]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[702]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[703]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[704]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[705]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[706]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[707]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[708]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[709]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[710]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[711]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[712]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[713]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[714]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[715]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[716]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[717]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[718]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[719]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[720]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[721]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[722]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.001"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[723]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[724]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualNonEgalite(Coordonnees, Coordonnees)[725]" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testHashCodeConstant" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
  <testcase name="testEqualTransitivite" classname="fr.eseo.e3.poo.projet.blox.modele.CoordonneesTest" time="0.0"/>
</testsuite>